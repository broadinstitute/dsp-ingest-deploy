{{with $secretPrefix := env "VAULT_PREFIX"}}
{{with $oauth_config := secret (printf "%s/transporter/oauth" $secretPrefix)}}
{{with $group_config := secret (printf "%s/kafka/group-ids/transporter" $secretPrefix)}}
{{with $tag := env "TRANSPORTER_VERSION"}}
{{with $memMib := 3072}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: transporter-manager
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: transporter-manager
    spec:
      serviceAccountName: transporter-manager-sa
      volumes:
        - name: appdir
          emptyDir: {}
        - name: ca-cert
          secret:
            secretName: ingest-cluster-cluster-ca-cert
            items:
              - key: ca.crt
                path: ca.crt
                mode: 0444
        - name: openidc-config
          configMap:
            name: openidc-config

      initContainers:
        - name: db-migrations
          image: us.gcr.io/broad-dsp-gcr-public/transporter-manager-migrations:{{$tag}}
          imagePullPolicy: IfNotPresent
          command: [ "/usr/local/bin/entrypoint.sh", "liquibase", "update" ]
          env:
            - name: LIQUIBASE_HOST
              value: cloudsql-proxy
            - name: LIQUIBASE_DATABASE
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: dbname
            - name: LIQUIBASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: username
            - name: LIQUIBASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: password

        - name: keytool
          image: openjdk:8-alpine
          imagePullPolicy: IfNotPresent
          command:
            - keytool
            - -keystore
            - /workdir/kafka.truststore.jks
            - -storepass
            - required-by-keytool-but-not-meaningful-outside-of-pod
            - -storetype
            - JKS
            - -noprompt
            - -alias
            - CARoot
            - -import
            - -file
            - /etc/tls/ca.crt
          volumeMounts:
            - name: appdir
              mountPath: /workdir
            - name: ca-cert
              mountPath: /etc/tls

      containers:
        - name: manager
          image: us.gcr.io/broad-dsp-gcr-public/transporter-manager:{{$tag}}
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: >-
                -server
                -Xmx{{$memMib}}m
                -Xms{{$memMib}}m
                -XX:+PrintFlagsFinal
                -XX:+PrintGCTimeStamps
                -XX:+PrintGCDateStamps
                -XX:+PrintGCDetails

            - name: OAUTH_CLIENT_ID
              value: {{$oauth_config.Data.client_id}}
            - name: WEB_RESPONSE_TIMEOUT
              value: 120s

            - name: DB_HOST
              value: cloudsql-proxy
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: dbname
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transporter-db-login-info
                  key: password
            - name: DB_MAX_CONNECTION_LIFETIME
              value: 120s
            - name: DB_LEAK_DETECTION_THRESHOLD
              value: 120s

            - name: KAFKA_BOOTSTRAP_URL
              value: "ingest-cluster-kafka-bootstrap:9093"
            - name: KAFKA_CLUSTER_TRUSTSTORE_PATH
              value: /etc/tls/kafka.truststore.jks
            - name: KAFKA_CLUSTER_TRUSTSTORE_PASSWORD
              value: required-by-keytool-but-not-meaningful-outside-of-pod
            - name: KAFKA_SCRAM_ALGORITHM
              value: sha-512
            - name: KAFKA_SCRAM_USERNAME
              value: transporter-manager-user
            - name: KAFKA_SCRAM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transporter-manager-user
                  key: password
            - name: KAFKA_GROUP_ID
              value: {{$group_config.Data.manager_group}}

            - name: KAFKA_REQUEST_TOPIC
              value: transporter.requests
            - name: KAFKA_PROGRESS_TOPIC
              value: transporter.progress
            - name: KAFKA_RESULT_TOPIC
              value: transporter.results
            - name: KAFKA_MAX_MESSAGE_SIZE_MIB
              value: "{{env "KAFKA_MAX_MESSAGE_SIZE_MIB"}}"

            - name: TRANSFER_SUBMISSION_INTERVAL
              value: 500ms
            - name: MAX_CONCURRENT_TRANSFERS
              value: "{{env "TRANSPORTER_AGENT_COUNT" | parseInt | multiply 4}}"

          resources:
            requests:
              cpu: 3000m
              memory: {{multiply $memMib 2}}Mi
            limits:
              cpu: 3000m
              memory: {{multiply $memMib 2}}Mi
          volumeMounts:
            - name: appdir
              mountPath: /etc/tls/kafka.truststore.jks
              subPath: kafka.truststore.jks
              readOnly: true
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3

        - name: openidc-proxy
          image: broadinstitute/openidc-proxy:2.3.1_20190819
          ports:
            - name: http-port
              containerPort: 80
          env:
            - name: PROXY_URL
              value: "http://localhost:8080/"
            - name: PROXY_URL2
              value: "http://localhost:8080/api"
            - name: LOG_LEVEL
              value: warn
            - name: PROXY_PATH
              value: /
            - name: AUTH_TYPE
              value: AuthType None
            - name: OIDC_CLAIM
              value: Require all granted
            - name: PROXY_PATH2
              value: /api
            - name: AUTH_TYPE2
              value: AuthType oauth20
            - name: OIDC_CLAIM2
              value:{{range $oauth_config.Data.authorized_emails}} Require claim email:{{.}}{{else}}Require valid-user{{end}}
          volumeMounts:
            - name: openidc-config
              mountPath: /etc/apache2/sites-available/site.conf
              subPath: site.conf
          readinessProbe:
            httpGet:
              path: /status
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /status
              port: 80
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
{{end}}{{end}}{{end}}{{end}}{{end}}
