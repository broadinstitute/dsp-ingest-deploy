{{with $secretPrefix := env "VAULT_PREFIX"}}
{{with $gcsKeyPath := "/etc/gcs"}}
{{with $gcsFileName := "gcs-writer-sa-key.json"}}
{{with $tag := env "TRANSPORTER_VERSION"}}
{{with $groupConfig := secret (printf "%s/kafka/group-ids/transporter" $secretPrefix)}}
{{with $memMib := 3072}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: transporter-agent
spec:
  selector:
    matchLabels:
      app: transporter-agent
  serviceName: transporter-agent
  replicas: {{env "TRANSPORTER_AGENT_COUNT"}}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: streams-scratch-dir
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: agent-storage
        resources:
          requests:
            storage: 5Gi
  template:
    metadata:
      labels:
        app: transporter-agent
    spec:
      serviceAccountName: transporter-agent-sa
      volumes:
        - name: gcs-sa-key
          secret:
            secretName: transporter-gcs-sa-key
            items:
              - key: json-key
                path: {{$gcsFileName}}
                mode: 0444
        - name: ca-cert
          secret:
            secretName: ingest-cluster-cluster-ca-cert
            items:
              - key: ca.crt
                path: ca.crt
                mode: 0444
        - name: appdir
          emptyDir: {}
      initContainers:
        - name: keytool
          image: openjdk:8-alpine
          imagePullPolicy: IfNotPresent
          command:
            - keytool
            - -keystore
            - /workdir/kafka.truststore.jks
            - -storepass
            - required-by-keytool-but-not-meaningful-outside-of-pod
            - -storetype
            - JKS
            - -noprompt
            - -alias
            - CARoot
            - -import
            - -file
            - /etc/tls/ca.crt
          volumeMounts:
            - name: appdir
              mountPath: /workdir
            - name: ca-cert
              mountPath: /etc/tls

      containers:
        - name: agent
          image: us.gcr.io/broad-dsp-gcr-public/transporter-sftp-to-gcs-agent:{{$tag}}
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: >-
                -server
                -Xmx{{$memMib}}m
                -Xms{{$memMib}}m
                -XX:+PrintFlagsFinal
                -XX:+PrintGCTimeStamps
                -XX:+PrintGCDateStamps
                -XX:+PrintGCDetails

            - name: KAFKA_BOOTSTRAP_URL
              value: "ingest-cluster-kafka-bootstrap:9093"
            - name: KAFKA_APPLICATION_ID
              value: {{$groupConfig.Data.agent_group}}
            - name: KAFKA_CLUSTER_TRUSTSTORE_PATH
              value: /etc/tls/kafka.truststore.jks
            - name: KAFKA_CLUSTER_TRUSTSTORE_PASSWORD
              value: required-by-keytool-but-not-meaningful-outside-of-pod
            - name: KAFKA_SCRAM_ALGORITHM
              value: sha-512
            - name: KAFKA_SCRAM_USERNAME
              value: transporter-agent-user
            - name: KAFKA_SCRAM_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transporter-agent-user
                  key: password

            - name: KAFKA_REQUEST_TOPIC
              value: transporter.requests
            - name: KAFKA_PROGRESS_TOPIC
              value: transporter.progress
            - name: KAFKA_RESULT_TOPIC
              value: transporter.results
            - name: KAFKA_MAX_MESSAGE_SIZE_MIB
              value: "{{env "KAFKA_MAX_MESSAGE_SIZE_MIB"}}"

            - name: SFTP_HOST
              valueFrom:
                secretKeyRef:
                  name: transporter-sftp-login
                  key: host
            - name: SFTP_PORT
              valueFrom:
                secretKeyRef:
                  name: transporter-sftp-login
                  key: port
            - name: SFTP_USER
              valueFrom:
                secretKeyRef:
                  name: transporter-sftp-login
                  key: username
            - name: SFTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: transporter-sftp-login
                  key: password

            - name: GCS_WRITER_SA_KEY_PATH
              value: "{{$gcsKeyPath}}/{{$gcsFileName}}"

            - name: MIB_PER_TRANSFER_STEP
              value: "{{env "MIB_PER_TRANSFER_STEP"}}"
            - name: MAX_CONCURRENT_READS
              value: "{{env "MAX_CONCURRENT_READS"}}"
          lifecycle:
            preStop:
              exec:
                # Give the app the chance to finish any in-flight transfer.
                command: ["sh", "-ce", "kill -s TERM 1; while $(kill -0 1 2>/dev/null); do sleep 1; done"]
          resources:
            requests:
              cpu: 333m
              memory: {{add $memMib 1024}}Mi
            limits:
              cpu: 333m
              memory: {{add $memMib 1024}}Mi
          volumeMounts:
            - name: appdir
              mountPath: /etc/tls/kafka.truststore.jks
              subPath: kafka.truststore.jks
              readOnly: true
            - name: gcs-sa-key
              mountPath: {{$gcsKeyPath}}
            - name: streams-scratch-dir
              mountPath: /tmp/kafka-streams
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 20
            timeoutSeconds: 10
            failureThreshold: 3
{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}
