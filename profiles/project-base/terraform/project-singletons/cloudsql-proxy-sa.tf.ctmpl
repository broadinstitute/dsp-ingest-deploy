resource "google_service_account" "{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa" {
    account_id = "{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa"
    display_name = "CloudSQL proxy account"
    depends_on = ["module.enable-services"]
}

resource "google_service_account_key" "{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa-key" {
    service_account_id = "${google_service_account.{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa.name}"
}

resource "vault_generic_secret" "{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa-key-secret" {
    path = "secret/dsde/monster/{{env "ENVIRONMENT"}}/{{env "APPLICATION_NAME"}}/{{env "INGEST_PROJECT"}}/cloudsql/proxy-sa-key"
    data_json = "${base64decode(google_service_account_key.{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa-key.private_key)}"
}

# NOTE: SAs created through Terraform are eventually-consistent, so we need to inject
# an arbitrary delay between creating the account and applying IAM rules.
# See: https://www.terraform.io/docs/providers/google/r/google_service_account.html
# And: https://github.com/hashicorp/terraform/issues/17726#issuecomment-377357866
resource "null_resource" "{{env "APPLICATION_NAME"}}-cloudsql-proxy-delay" {
    provisioner "local-exec" {
        command = "sleep 10"
    }
    triggers = {
        "before" = "${google_service_account.{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa.unique_id}"
    }
}

resource "google_project_iam_member" "{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa-iam" {
    project = "{{env "GOOGLE_PROJECT"}}"
    role = "roles/cloudsql.client"
    member = "serviceAccount:${google_service_account.{{env "APPLICATION_NAME"}}-cloudsql-proxy-sa.email}"
    depends_on = ["null_resource.{{env "APPLICATION_NAME"}}-cloudsql-proxy-delay"]
}
